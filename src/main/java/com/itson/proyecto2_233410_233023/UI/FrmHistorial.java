/**
 * Clase Historial.java creada el 29/03/2023.
 */
package com.itson.proyecto2_233410_233023.UI;

import com.itson.proyecto2_233410_233023.dominio.Persona;
import com.itson.proyecto2_233410_233023.dominio.Tramite;
import com.itson.proyecto2_233410_233023.dominio.TramiteLicencia;
import com.itson.proyecto2_233410_233023.dominio.TramitePlaca;
import com.itson.proyecto2_233410_233023.implementaciones.ConfiguracionPaginado;
import com.itson.proyecto2_233410_233023.implementaciones.HistorialDAO;
import com.itson.proyecto2_233410_233023.implementaciones.PersistenciaException;
import com.itson.proyecto2_233410_233023.implementaciones.PersonasDTO;
import com.itson.proyecto2_233410_233023.implementaciones.Validador;
import com.itson.proyecto2_233410_233023.interfaces.IConexionBD;
import com.itson.proyecto2_233410_233023.interfaces.IHistorialDAO;
import com.itson.proyecto2_233410_233023.interfaces.IPersonasDAO;
import com.itson.proyecto2_233410_233023.interfaces.ITramitesDAO;
import com.itson.proyecto2_233410_233023.interfaces.IVehiculosDAO;
import java.awt.geom.RoundRectangle2D;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kim
 */
public class FrmHistorial extends javax.swing.JFrame {

    IPersonasDAO personasDAO;
    IVehiculosDAO vehiculosDAO;
    ITramitesDAO tramitesDAO;
    IHistorialDAO historialDAO;
    private ConfiguracionPaginado paginado;
    private int numeroPagina = 0;
    private int elementosPorPagina = 3;
    private Persona personaSeleccionada = null;
    private String filtro = null;
    private Validador validador = new Validador();
    DefaultComboBoxModel<Persona> modeloComboBox = new DefaultComboBoxModel<Persona>();

    /**
     * Creates new form FrmTramitarPlacas
     */
    public FrmHistorial(IPersonasDAO personasDAO, ITramitesDAO tramitesDAO, IHistorialDAO historialDAO) {
        initComponents();
        this.historialDAO = historialDAO;
        this.tramitesDAO = tramitesDAO;
        this.personasDAO = personasDAO;
        this.paginado = new ConfiguracionPaginado(this.numeroPagina, this.elementosPorPagina);
        txtRfc.setEnabled(false);
        txtNombres.setEnabled(false);
        dtpFechaNacimiento.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void mostrarMensaje(String msj) {
        JOptionPane.showMessageDialog(null, msj, "Info", JOptionPane.INFORMATION_MESSAGE);
    }

    private String obtenerRFC() {
        return txtRfc.getText();
    }

    private String obtenerNombres() {
        return txtNombres.getText();
    }

    private String obtenerFechaNacimiento() {

        String fechaFormateada = null;
        String fechaTexto = dtpFechaNacimiento.getText(); // obtenemos la fecha como una cadena de texto
        int indiceEspacio = fechaTexto.indexOf(" ");
        if (indiceEspacio >= 0 && indiceEspacio < fechaTexto.length()) {
            String caracteresAntesEspacio = fechaTexto.substring(0, indiceEspacio);
            int cantidadCaracteres = caracteresAntesEspacio.length();

            if (cantidadCaracteres == 1) {
                fechaTexto = "0" + fechaTexto;
            }

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd 'de' MMMM 'de' yyyy", new Locale("es", "ES"));
            LocalDate fecha = LocalDate.parse(fechaTexto, formatter);
            fechaFormateada = fecha.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));

            return fechaFormateada;
        }
        return null;

    }

    /**
     * Método para validar el TextField de búsqueda el cuál valida dependiendo
     * de la opción seleccionada.
     *
     * @return Valor booleano para comprobar la validación.
     */
    public void cargarComboBoxPersonas() throws PersistenciaException {

        List<Persona> personas = casillasActivas();
        if (personas.isEmpty() || personas == null) {
            DefaultTableModel model = (DefaultTableModel) tblHistorial.getModel();
            model.setRowCount(0);
            mostrarMensaje("Registro no encontrado");
        }
        for (Persona persona : personas) {
            modeloComboBox.addElement(persona);
        }
        cbxPersonas.setModel(modeloComboBox);
    }

    private PersonasDTO personaDTO() {
        PersonasDTO personaDTO = new PersonasDTO(obtenerRFC(), obtenerNombres(), obtenerFechaNacimiento());
        return personaDTO;
    }

    private List<Persona> buscarPersonaConTodosLosFiltros(PersonasDTO personaDTO) {
        List<Persona> personas = historialDAO.buscar(personaDTO());
        return personas;
    }

    public String definirTipoTramite(int i, Tramite tramite) {
        String tipo = null;
        List<Tramite> tramites = tramitesDAO.consultarColumnaTipoTramite();

        if (tramite instanceof TramiteLicencia) {
            tipo = "TramiteLicencia";
        } else if (tramite instanceof TramitePlaca) {
            tipo = "TramitePlaca";
        }
        return tipo;
    }

    private void cargarTablaTramites() {
        if (personaSeleccionada != null) {
            List<Tramite> tramitesPersonaSeleccionada = personaSeleccionada.getTramites();
            DefaultTableModel modeloTablaPersonas = (DefaultTableModel) this.tblHistorial.getModel();
            modeloTablaPersonas.setRowCount(0);

            for (int i = 0; i < tramitesPersonaSeleccionada.size(); i++) {
                Tramite tramite = tramitesPersonaSeleccionada.get(i);
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd"); // Crear un objeto SimpleDateFormat con el formato deseado
                String fechaExpedicion = sdf.format(tramite.getFechaExpedicion().getTime()); // Formatear la fecha del calendario y convertirla a una cadena de texto 
                Object[] filaNueva = {personaSeleccionada.getNombre() + " " + personaSeleccionada.getApellidoPaterno(), definirTipoTramite(i, tramite),
                    fechaExpedicion, "$ " + tramite.getCosto()};
                modeloTablaPersonas.addRow(filaNueva);
            }
        }
    }

    public List<Persona> casillasActivas() throws PersistenciaException {
        List<Persona> personas = null;
        // Verificar cuáles JCheckBox están seleccionados
        boolean filtro1Seleccionado = jcbRfc.isSelected();
        boolean filtro2Seleccionado = jcbNombres.isSelected();
        boolean filtro3Seleccionado = jcbFechaNacimiento.isSelected();

        String filtro1Dato = obtenerRFC();
        String filtro2Dato = obtenerNombres();
        String filtro3Dato = obtenerFechaNacimiento();

        // Aplicar el filtro correspondiente
        if (filtro1Seleccionado && filtro2Seleccionado && filtro3Seleccionado) {
            // Aplicar los tres filtros
            validador.validaNombre(filtro2Dato);
            validador.validaRFC(filtro1Dato);
            validador.validaFechaNacimiento(filtro3Dato);
            personas = personasDAO.consultasTresPersonasTresFiltro("rfc", "nombres", "fechaNacimiento", filtro1Dato, filtro2Dato, filtro3Dato, paginado);
        } else if (filtro1Seleccionado && filtro2Seleccionado) {
            // Aplicar los filtros 1 y 2
            validador.validaNombre(filtro2Dato);
            validador.validaRFC(filtro1Dato);
            personas = personasDAO.consultarPersonasDosFiltro("rfc", "nombre", filtro1Dato, filtro2Dato, paginado);

        } else if (filtro1Seleccionado && filtro3Seleccionado) {
            System.out.println("entras");
            // Aplicar los filtros 1 y 3
            validador.validaRFC(filtro1Dato);
            validador.validaFechaNacimiento(filtro3Dato);
            personas = personasDAO.consultarPersonasDosFiltro("rfc", "fechaNacimiento", filtro1Dato, filtro3Dato, paginado);
            System.out.println(personas);

        } else if (filtro2Seleccionado && filtro3Seleccionado) {
            // Aplicar los filtros 2 y 3
            validador.validaFechaNacimiento(filtro3Dato);
            validador.validaNombre(filtro2Dato);
            personas = personasDAO.consultarPersonasDosFiltro("nombres", "fechaNacimiento", filtro2Dato, filtro3Dato, paginado);
        } else if (filtro1Seleccionado) {
            // Aplicar el filtro 1
            validador.validaRFC(filtro1Dato);
            personas = personasDAO.consultarPersonasFiltro("rfc", filtro1Dato, paginado);
        } else if (filtro2Seleccionado) {
            // Aplicar el filtro 2
            validador.validaNombre(filtro2Dato);
            personas = personas = personasDAO.consultarPersonasFiltro("nombres", filtro2Dato, paginado);
        } else if (filtro3Seleccionado) {
            // Aplicar el filtro 3
            validador.validaFechaNacimiento(filtro3Dato);
            personas = personasDAO.consultarPersonasFiltro("fechaNacimiento", filtro3Dato, paginado);
        } else {
            mostrarMensaje("Filtro de consultas incorrecto");
        }
        return personas;
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFondoMenu = new javax.swing.JPanel();
        jToolBarMenu = new javax.swing.JToolBar();
        jPanelBarra = new javax.swing.JPanel();
        btnVolver = new javax.swing.JButton();
        lblHistorial = new javax.swing.JLabel();
        cbxTipoTramite = new javax.swing.JComboBox<>();
        lblTipoTramite = new javax.swing.JLabel();
        lblHistorialSolicitudes = new javax.swing.JLabel();
        txtRfc = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jcbRfc = new javax.swing.JCheckBox();
        jcbNombres = new javax.swing.JCheckBox();
        txtNombres = new javax.swing.JTextField();
        jcbFechaNacimiento = new javax.swing.JCheckBox();
        dtpFechaNacimiento = new com.github.lgooddatepicker.components.DatePicker();
        lblBuscar1 = new javax.swing.JLabel();
        cbxPersonas = new javax.swing.JComboBox<>();
        lblListaPersonas = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistorial = new javax.swing.JTable();
        lblBuscar3 = new javax.swing.JLabel();
        lblBuscar4 = new javax.swing.JLabel();
        lblBuscar5 = new javax.swing.JLabel();
        lblBuscar6 = new javax.swing.JLabel();
        cbxPaginado = new javax.swing.JComboBox<>();
        btnGenerarReporte = new javax.swing.JButton();
        dtpHasta = new com.github.lgooddatepicker.components.DatePicker();
        dtpDe = new com.github.lgooddatepicker.components.DatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Autopapeleo Menú ");
        setBackground(new java.awt.Color(233, 219, 253));
        setName("frmMenu"); // NOI18N
        setResizable(false);

        jPanelFondoMenu.setBackground(new java.awt.Color(233, 219, 253));
        jPanelFondoMenu.setForeground(new java.awt.Color(233, 219, 253));
        jPanelFondoMenu.setPreferredSize(new java.awt.Dimension(600, 400));

        jToolBarMenu.setRollover(true);
        jToolBarMenu.setBackground(new java.awt.Color(233, 219, 253));
        jToolBarMenu.setBorder(null);
        jToolBarMenu.setForeground(new java.awt.Color(233, 219, 253));

        jPanelBarra.setBackground(new java.awt.Color(129, 0, 127));
        jPanelBarra.setForeground(new java.awt.Color(129, 0, 127));
        jPanelBarra.setToolTipText("");

        btnVolver.setText("Volver");
        btnVolver.setBorder(null);
        btnVolver.setBorderPainted(false);
        btnVolver.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(124, 63, 163));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        lblHistorial.setText("Historial");
        lblHistorial.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblHistorial.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanelBarraLayout = new javax.swing.GroupLayout(jPanelBarra);
        jPanelBarra.setLayout(jPanelBarraLayout);
        jPanelBarraLayout.setHorizontalGroup(
            jPanelBarraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarraLayout.createSequentialGroup()
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHistorial)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBarraLayout.setVerticalGroup(
            jPanelBarraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBarraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addComponent(lblHistorial))
        );

        cbxTipoTramite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Placas", "Licencias", "Ambos" }));
        cbxTipoTramite.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        cbxTipoTramite.setForeground(new java.awt.Color(124, 63, 163));
        cbxTipoTramite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoTramiteActionPerformed(evt);
            }
        });

        lblTipoTramite.setText("Tipo de trámite");
        lblTipoTramite.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblTipoTramite.setForeground(new java.awt.Color(124, 63, 163));

        lblHistorialSolicitudes.setText("Historial de solicitudes");
        lblHistorialSolicitudes.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblHistorialSolicitudes.setForeground(new java.awt.Color(124, 63, 163));

        txtRfc.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N

        btnActualizar.setText("Aplicar filtros");
        btnActualizar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(124, 63, 163)));
        btnActualizar.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(129, 0, 127));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 429, Short.MAX_VALUE)
        );

        jcbRfc.setText("RFC");
        jcbRfc.setBackground(new java.awt.Color(233, 219, 253));
        jcbRfc.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jcbRfc.setForeground(new java.awt.Color(124, 63, 163));
        jcbRfc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRfcActionPerformed(evt);
            }
        });

        jcbNombres.setText("Nombres");
        jcbNombres.setBackground(new java.awt.Color(233, 219, 253));
        jcbNombres.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jcbNombres.setForeground(new java.awt.Color(124, 63, 163));
        jcbNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNombresActionPerformed(evt);
            }
        });

        txtNombres.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N

        jcbFechaNacimiento.setText("Fecha de nacimiento");
        jcbFechaNacimiento.setBackground(new java.awt.Color(233, 219, 253));
        jcbFechaNacimiento.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jcbFechaNacimiento.setForeground(new java.awt.Color(124, 63, 163));
        jcbFechaNacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFechaNacimientoActionPerformed(evt);
            }
        });

        dtpFechaNacimiento.setBackground(new java.awt.Color(233, 219, 253));

        lblBuscar1.setText("Buscar por:");
        lblBuscar1.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblBuscar1.setForeground(new java.awt.Color(124, 63, 163));

        cbxPersonas.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        cbxPersonas.setForeground(new java.awt.Color(124, 63, 163));
        cbxPersonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPersonasActionPerformed(evt);
            }
        });

        lblListaPersonas.setText("Lista de personas que coinciden");
        lblListaPersonas.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblListaPersonas.setForeground(new java.awt.Color(124, 63, 163));

        tblHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Tipo trámite", "Fecha", "Costo"
            }
        ));
        tblHistorial.setBackground(new java.awt.Color(233, 219, 253));
        jScrollPane1.setViewportView(tblHistorial);

        lblBuscar3.setText("Hasta:");
        lblBuscar3.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblBuscar3.setForeground(new java.awt.Color(124, 63, 163));

        lblBuscar4.setText("Filtro de fecha");
        lblBuscar4.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblBuscar4.setForeground(new java.awt.Color(124, 63, 163));

        lblBuscar5.setText("De:");
        lblBuscar5.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblBuscar5.setForeground(new java.awt.Color(124, 63, 163));

        lblBuscar6.setText("Filtro paginado");
        lblBuscar6.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        lblBuscar6.setForeground(new java.awt.Color(124, 63, 163));

        cbxPaginado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "5", "10" }));
        cbxPaginado.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        cbxPaginado.setForeground(new java.awt.Color(124, 63, 163));
        cbxPaginado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPaginadoActionPerformed(evt);
            }
        });

        btnGenerarReporte.setText("Generar reporte");
        btnGenerarReporte.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(124, 63, 163)));
        btnGenerarReporte.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        btnGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarReporteActionPerformed(evt);
            }
        });

        dtpHasta.setBackground(new java.awt.Color(233, 219, 253));

        dtpDe.setBackground(new java.awt.Color(233, 219, 253));

        javax.swing.GroupLayout jPanelFondoMenuLayout = new javax.swing.GroupLayout(jPanelFondoMenu);
        jPanelFondoMenu.setLayout(jPanelFondoMenuLayout);
        jPanelFondoMenuLayout.setHorizontalGroup(
            jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBarra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToolBarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jcbRfc)
                                .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                                    .addComponent(lblTipoTramite)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cbxTipoTramite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jcbNombres)
                                .addComponent(txtRfc)
                                .addComponent(txtNombres)
                                .addComponent(jcbFechaNacimiento)
                                .addComponent(dtpFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblBuscar1)))
                    .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                        .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelFondoMenuLayout.createSequentialGroup()
                                .addComponent(lblBuscar6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxPaginado, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                                    .addGap(15, 15, 15)
                                    .addComponent(lblHistorialSolicitudes, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBuscar4)
                            .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnGenerarReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                                    .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblBuscar3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblBuscar5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(dtpDe, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                                        .addComponent(dtpHasta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addComponent(lblListaPersonas)
                    .addComponent(cbxPersonas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanelFondoMenuLayout.setVerticalGroup(
            jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                .addComponent(jPanelBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxTipoTramite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTipoTramite))
                        .addGap(18, 18, 18)
                        .addComponent(lblBuscar1)
                        .addGap(18, 18, 18)
                        .addComponent(jcbRfc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(txtRfc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jcbNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jcbFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtpFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnActualizar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblListaPersonas)
                        .addGap(7, 7, 7)
                        .addComponent(cbxPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToolBarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(lblHistorialSolicitudes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                                .addComponent(lblBuscar4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblBuscar5)
                                    .addComponent(dtpDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dtpHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblBuscar3)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanelFondoMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblBuscar6)
                                    .addComponent(cbxPaginado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelFondoMenuLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(btnGenerarReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(136, 136, 136))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFondoMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondoMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 993, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondoMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 458, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        FrmMenu frmm = new FrmMenu(personasDAO, vehiculosDAO, tramitesDAO, historialDAO);
        this.setVisible(false);
        frmm.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        cbxPersonas.removeAllItems();
        tblHistorial.removeAll();
        try {
            cargarComboBoxPersonas();
        } catch (PersistenciaException ex) {
            Logger.getLogger(FrmHistorial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void cbxTipoTramiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoTramiteActionPerformed

    }//GEN-LAST:event_cbxTipoTramiteActionPerformed

    private void cbxPersonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPersonasActionPerformed
        personaSeleccionada = (Persona) cbxPersonas.getSelectedItem();
        cargarTablaTramites();
    }//GEN-LAST:event_cbxPersonasActionPerformed

    private void cbxPaginadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPaginadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxPaginadoActionPerformed

    private void btnGenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarReporteActionPerformed

    }//GEN-LAST:event_btnGenerarReporteActionPerformed

    private void jcbRfcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRfcActionPerformed
        if (jcbRfc.isSelected()) {
            txtRfc.setEnabled(true);
        } else {
            txtRfc.setEnabled(false);
        }
    }//GEN-LAST:event_jcbRfcActionPerformed

    private void jcbNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNombresActionPerformed
        if (jcbNombres.isSelected()) {
            txtNombres.setEnabled(true);
        } else {
            txtNombres.setEnabled(false);
        }
    }//GEN-LAST:event_jcbNombresActionPerformed

    private void jcbFechaNacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFechaNacimientoActionPerformed
        if (jcbFechaNacimiento.isSelected()) {
            dtpFechaNacimiento.setEnabled(true);
        } else {
            dtpFechaNacimiento.setEnabled(false);
        }
    }//GEN-LAST:event_jcbFechaNacimientoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnGenerarReporte;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cbxPaginado;
    private javax.swing.JComboBox<Persona> cbxPersonas;
    private javax.swing.JComboBox<String> cbxTipoTramite;
    private com.github.lgooddatepicker.components.DatePicker dtpDe;
    private com.github.lgooddatepicker.components.DatePicker dtpFechaNacimiento;
    private com.github.lgooddatepicker.components.DatePicker dtpHasta;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBarra;
    private javax.swing.JPanel jPanelFondoMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBarMenu;
    private javax.swing.JCheckBox jcbFechaNacimiento;
    private javax.swing.JCheckBox jcbNombres;
    private javax.swing.JCheckBox jcbRfc;
    private javax.swing.JLabel lblBuscar1;
    private javax.swing.JLabel lblBuscar3;
    private javax.swing.JLabel lblBuscar4;
    private javax.swing.JLabel lblBuscar5;
    private javax.swing.JLabel lblBuscar6;
    private javax.swing.JLabel lblHistorial;
    private javax.swing.JLabel lblHistorialSolicitudes;
    private javax.swing.JLabel lblListaPersonas;
    private javax.swing.JLabel lblTipoTramite;
    private javax.swing.JTable tblHistorial;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtRfc;
    // End of variables declaration//GEN-END:variables
}
